{"version":3,"sources":["Components/login/LoginSceen.js","data/heroes.js","Components/hero/HeroCard.js","Components/hero/HeroList.js","helpers/getHeroByPublisher.js","Components/marvel/MarvelScreen.js","Components/search/SearchScreen.js","Hooks/useForm.js","helpers/getHeroByName.js","Components/dc/DcomicsScreen.js","Components/ui/NavBar.js","Components/hero/HeroeScreen.js","helpers/getHeroById.js","routers/DashboardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["LoginSceen","navigate","useNavigate","className","onClick","replace","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appareance","characters","imagePath","src","alt","to","HeroList","useMemo","includes","Error","filter","heroe","getHeroByPublisher","map","hero","key","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","useForm","searchText","formValues","heroeBuscado","console","log","toLowerCase","getHeroByName","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","length","DcomicsScreen","Navbar","isActive","HeroeScreen","heroeId","useParams","getHero","find","getHeroById","first_appearance","DashboardRoutes","path","element","AppRouter","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,EAAa,WAE1B,IAAMC,EAAWC,cAUf,OACF,yBAAKC,UAAU,kBACb,qCACA,6BACA,4BAAQA,UAAU,kBAAkBC,QAZhB,WAClBH,EAAS,UAAU,CACjBI,SAAQ,MAUZ,WCnBWC,EAAS,CAClB,CACI,GAAM,YACN,UAAY,SACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,uBACnB,WAAa,eAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,YACZ,UAAY,SACZ,iBAAmB,mBACnB,WAAa,UAEjB,CACI,GAAM,WACN,UAAY,QACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,kBACnB,WAAa,oDAEjB,CACI,GAAM,WACN,UAAY,gBACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,0BACnB,WAAa,6FAEjB,CACI,GAAM,WACN,UAAY,cACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,YACN,UAAY,eACZ,UAAY,YACZ,UAAY,iBACZ,iBAAmB,qBACnB,WAAa,kBAEjB,CACI,GAAM,aACN,UAAY,oBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,wBACnB,WAAa,qBAEjB,CACI,GAAM,WACN,UAAY,kBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,uBACnB,WAAa,gBAEjB,CACI,GAAM,UACN,UAAY,cACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,qCAEjB,CACI,GAAM,WACN,UAAY,eACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,mBACnB,WAAa,4BAEjB,CACI,GAAM,gBACN,UAAY,aACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,iBACN,UAAY,kBACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,4BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,gBACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,cAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,0BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,yBACnB,WAAa,gBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,2BACnB,WAAa,iBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,0BACZ,iBAAmB,eACnB,WAAa,2BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,yBACZ,iBAAmB,wBACnB,WAAa,0BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,WACnB,WAAa,iBAEjB,CACI,GAAM,gBACN,UAAY,gBACZ,UAAY,gBACZ,UAAY,cACZ,iBAAmB,yBACnB,WAAa,gBC3JRC,EAAW,SAAC,GASxB,IARGC,EAQJ,EARIA,GACAC,EAOJ,EAPIA,UAEAC,GAKJ,EANIC,UAMJ,EALID,WACAE,EAIJ,EAJIA,iBACAC,EAGJ,EAHIA,WAIMC,EAAS,yBAAqBN,EAArB,QACf,OACI,yBAAKL,UAAU,OACX,yBAAKA,UAAU,QAEX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACf,yBAAKY,IAAKD,EAAWX,UAAU,WAAWa,IAAKP,KAGnD,yBAAKN,UAAU,SACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,cAAcM,GAC5B,uBAAGN,UAAU,aAAaO,GAGrBA,IAAcG,GACf,uBAAGV,UAAU,cAAcU,GAE/B,uBAAGV,UAAU,aACT,2BAAOA,UAAU,cAAcS,IAGnC,kBAAC,IAAD,CAAMK,GAAE,gBAAWT,IAAnB,eCjCXU,EAAW,SAAC,GAAmB,IAAjBP,EAAgB,EAAhBA,UAEjBL,EAASa,mBAAQ,kBCJO,SAACR,GAE/B,IADuB,CAAC,YAAY,iBACjBS,SAAST,GACxB,MAAM,IAAIU,MAAJ,UAAaV,EAAb,8BAEV,OAAOL,EAAOgB,QAAO,SAAAC,GAAK,OAAGA,EAAMZ,YAAcA,KDDtBa,CAAmBb,KAAW,CAACA,IAC1D,OACI,yBAAKR,UAAU,uEAEHG,EAAOmB,KAAI,SAAAC,GAAI,OACV,kBAAC,EAAD,eACAC,IAAKD,EAAKlB,IAAQkB,SET9BE,EAAe,WAC1B,OACE,6BACE,6CACA,kBAAC,EAAD,CAAUjB,UAAW,oB,sCCCdkB,EAAe,WAE1B,IAAM5B,EAAWC,cACX4B,EAAWC,cAGjB,EAAiBC,IAAYC,MAAMH,EAASI,QAArCC,SAAP,MAAW,GAAX,EAIA,ECfqB,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAWH,IAITK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,GDHEK,CAAQ,CAC9CC,WAAYX,IADd,mBAAOY,EAAP,KAAmBN,EAAnB,KAIQK,EAAeC,EAAfD,WACFE,EAAe7B,mBAAQ,kBEpBF,WAAgB,IAAfwB,EAAc,uDAAP,GAGjC,OADAM,QAAQC,IAAI,YACA,KAATP,EACQ,IAGXA,EAAOA,EAAKQ,cACL7C,EAAOgB,QAAO,SAAAI,GAAI,OAAIA,EAAKjB,UAAU0C,cAAc/B,SAASuB,OFYpCS,CAAcjB,KAAG,CAACA,IAQnD,OACE,6BAEE,yCACA,6BACA,yBAAKhC,UAAU,OACf,yBAAKA,UAAU,SACb,sCAEA,0BAAMkD,SAdS,SAACC,GACpBA,EAAEC,iBAEFtD,EAAS,MAAD,OAAO6C,MAYT,2BACEU,KAAK,OACLC,YAAY,kBACZtD,UAAU,eACVwC,KAAK,aACLe,aAAa,MACbd,MAAOE,EACPa,SAAUlB,IAIZ,4BAAQtC,UAAU,yCAChBqD,KAAK,UADP,YASJ,yBAAKrD,UAAU,SACb,sCACA,6BAEO,KAAJgC,EACC,yBAAKhC,UAAU,oBAAf,mBACyB,IAAxB6C,EAAaY,QAAiB,yBAAKzD,UAAU,sBAAf,2BAIjC6C,EAAavB,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,eACEC,IAAKD,EAAKlB,IACNkB,WGvELmC,EAAgB,WAC3B,OACE,6BACE,wCAEA,kBAAC,EAAD,CAAUlD,UAAU,gBCLbmD,EAAS,WAAO,IAAD,IAElB7D,EAAWC,cASjB,OACI,yBAAKC,UAAU,+CAEX,kBAAC,IAAD,CACIA,UAAU,eACVc,GAAG,KAFP,gBAOA,yBAAKd,UAAU,mBACX,yBAAKA,UAAU,cAEX,kBAAC,IAAD,CAEIA,UAAW,kBAAe,qBAAf,EAAE4D,SAA+C,SAAS,KACrE9C,GAAG,WAHP,UAQA,kBAAC,KAAD,GACId,UAAW,kBAAe,qBAAf,EAAE4D,SAA+C,SAAS,MADzE,0BAEc,qBAFd,mBAGO,OAHP,SAQA,kBAAC,KAAD,GACI5D,UAAW,kBAAe,qBAAf,EAAE4D,SAA+C,SAAS,MADzE,0BAEc,qBAFd,mBAGO,WAHP,eAUR,yBAAK5D,UAAU,oFACX,wBAAIA,UAAU,sBACV,0BAAMA,UAAU,+BAAhB,YACA,4BAEIA,UAAU,wBACVC,QAnDC,WAEjBH,EAAS,SAAS,CACdI,SAAQ,MA6CA,cCpDP2D,EAAc,WAGzB,IAAQC,EAAYC,cAAZD,QACFhE,EAAWC,cACXiE,EAAUhD,mBAAQ,kBCLC,WAAc,IAAbX,EAAY,uDAAP,GAC/B,OAAOF,EAAO8D,MAAK,SAAA1C,GAAI,OAAIA,EAAKlB,KAAOA,KDIX6D,CAAYJ,KAAS,CAACA,IAElD,IAAKE,EACH,OAAO,kBAAC,IAAD,CAAUlD,GAAG,MAGtB,IAAQT,EAKe2D,EALf3D,GACNC,EAIqB0D,EAJrB1D,UACAE,EAGqBwD,EAHrBxD,UACAD,EAEqByD,EAFrBzD,UACAG,EACqBsD,EADrBtD,WACAyD,EAAqBH,EAArBG,iBAEIxD,EAAS,yBAAqBN,EAArB,QAMf,OAEE,yBAAKL,UAAU,mDACb,yBAAKA,UAAU,SACb,yBAAKY,IAAKD,EACRE,IAAKP,EACLN,UAAU,mBAGd,yBAAKA,UAAU,SACb,4BAAKM,GACL,wBAAIN,UAAU,+BACZ,wBAAIA,UAAU,mBAAkB,yCAAkBO,GAClD,wBAAIP,UAAU,mBAAkB,yCAAkBQ,GAClD,wBAAIR,UAAU,mBAAkB,0CAAmBU,GACnD,wBAAIV,UAAU,mBAAkB,+CAAwBmE,IAG1D,4BAAQnE,UAAU,uBAAuBC,QAtBxB,WACrBH,GAAU,KAqBN,eEtCKsE,EAAkB,WAC7B,OACC,oCACA,kBAAC,EAAD,MACH,yBAAKpE,UAAU,aACZ,kBAAC,IAAD,KACa,kBAAC,IAAD,CAAOqE,KAAK,UAAUC,QAAS,kBAAC,EAAD,QAC/B,kBAAC,IAAD,CAAOD,KAAK,MAAMC,QAAS,kBAAC,EAAD,QAC3B,kBAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,kBAAC,EAAD,QAC/B,kBAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,kBAAC,EAAD,QACrC,kBAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,kBAAC,EAAD,YCR5BC,EAAY,WACvB,OAGE,kBAAC,IAAD,KAEQ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,kBAAC,EAAD,QAChC,kBAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,kBAAC,EAAD,WCf3BE,EAAY,WACvB,OAEE,kBAAC,EAAD,OCFJC,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7cda4ff7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const LoginSceen = () => {\r\n\r\nconst navigate = useNavigate();\r\n\r\n  const handleLogin = ()=>{\r\n    navigate(\"/marvel\",{\r\n      replace:true\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n<div className=\"container mt-5\">\r\n  <h1>Login</h1>\r\n  <hr></hr>\r\n  <button className=\"btn btn-primary\" onClick={handleLogin}>Login</button>\r\n</div>\r\n  )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Componente que da formato a cada una de las tarjetas del heroe\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appareance,\r\n    characters,\r\n}) => //Desestructuracion de las props mandadas en en HeroList.js \r\n\r\n{\r\n    const imagePath = `/assets/heroes/${id}.jpg`;//Extrae la imagen del path de los heroes\r\n    return (\r\n        <div className='col'>\r\n            <div className='card'>\r\n\r\n                <div className='row no-gutters'>\r\n                    <div className='col-4'></div>\r\n                    <img src={imagePath} className='card-img' alt={superhero}></img>\r\n                </div>\r\n\r\n                <div className='col-8'>\r\n                    <div className='card-boddy'>\r\n                        <h5 className='card-title'>{superhero}</h5>\r\n                        <p className='card-text'>{alter_ego}</p>\r\n\r\n                        {\r\n                            (alter_ego !== characters) &&\r\n                            <p className='text-muted'>{characters}</p>\r\n                        }\r\n                        <p className='card-text'>\r\n                            <small className='text-muted'>{first_appareance}</small>\r\n                        </p>\r\n                        \r\n                        <Link to={`/hero/${id}`}>Mas...</Link>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroByPublisher } from '../../helpers/getHeroByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({ publisher }) => {//Obtiene por props el publisher de los heroes(marvel o dc)\r\n\r\n    const heroes = useMemo(()=>getHeroByPublisher(publisher),[publisher]);//Variable que almacena la informacion del los heroes dependiendo la compa;ia\r\n    return (\r\n        <div className='row rows-cols-1 row-cols-md-5 g-3 animate__animated animate__fadeIn'>\r\n                {\r\n                    heroes.map(hero => (\r\n                         <HeroCard \r\n                         key={hero.id} {...hero}>\r\n                            \r\n                        </HeroCard>\r\n                    ))\r\n                    //{...hero}: Envia las props(atributos) del heroe al componente HeroCard para ser utilizadas \r\n                    //y dar formato a las cartas de cada uno\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from '../data/heroes'\r\n\r\nexport const getHeroByPublisher = (publisher) => {\r\n    const validPublisher = ['DC Comics','Marvel Comics'];\r\n    if(!validPublisher.includes(publisher)){\r\n        throw new Error(`${publisher} is not a valid publisher`);\r\n    }\r\n    return heroes.filter(heroe =>heroe.publisher === publisher);\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../hero/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n  return (\r\n    <div>\r\n      <h1>Marvel Comics</h1>\r\n      <HeroList publisher={\"Marvel Comics\"}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useDebugValue, useMemo } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { heroes } from '../../data/heroes';\r\nimport { getHeroByName } from '../../helpers/getHeroByName';\r\nimport { useForm } from '../../Hooks/useForm'\r\nimport { HeroCard } from '../hero/HeroCard';\r\nimport queryString from 'query-string';\r\n\r\nexport const SearchScreen = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n\r\n  const {q = ''} = queryString.parse(location.search);\r\n  \r\n\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    searchText: q,\r\n  });\r\n\r\n  const { searchText } = formValues;\r\n  const heroeBuscado = useMemo(()=>getHeroByName(q),[q]);\r\n\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    //console.log(searchText);\r\n    navigate(`?q=${searchText}`);\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <h1>Busquedas</h1>\r\n      <hr></hr>\r\n      <div className='row'>\r\n      <div className='col-5'>\r\n        <h3>Buscar</h3>\r\n\r\n        <form onSubmit={handleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder='Buscar un heroe'\r\n            className='form-control'\r\n            name='searchText'\r\n            autoComplete='off'\r\n            value={searchText}\r\n            onChange={handleInputChange}>\r\n\r\n          </input>\r\n\r\n          <button className='btn btn-outline-primary mt-1 btn-block'\r\n            type='submit'>\r\n            Buscar\r\n          </button>\r\n        </form>\r\n\r\n\r\n      </div>\r\n\r\n      <div className='col-3'>\r\n        <h4>Heroes</h4>\r\n        <hr></hr>\r\n        {\r\n          (q==='') \r\n          ? <div className='alert alert-info'>Buscar un heroe</div>\r\n          : (heroeBuscado.length === 0) && <div className='alert alert-danger'>No se encontro un heroe</div>\r\n        }\r\n        {\r\n\r\n          heroeBuscado.map(hero => (\r\n            <HeroCard\r\n              key={hero.id}\r\n              {...hero}\r\n            ></HeroCard>\r\n          ))\r\n        }\r\n      </div>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\nimport React from 'react'\r\nimport {heroes} from '../data/heroes';\r\nexport const getHeroByName = (name = '') => {\r\n  \r\n    console.log('asasasas');\r\n    if(name === ''){\r\n        return [];\r\n    }\r\n    \r\n    name = name.toLowerCase();\r\n    return heroes.filter(hero => hero.superhero.toLowerCase().includes(name));\r\n  \r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../hero/HeroList'\r\n\r\nexport const DcomicsScreen = () => {\r\n  return (\r\n    <div >\r\n      <h1>DcScreen</h1>\r\n\r\n      <HeroList publisher=\"DC Comics\"/>\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link, NavLink, useNavigate } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handlelogout = ()=>\r\n    {\r\n        navigate(\"/login\",{\r\n            replace:true\r\n        })\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        \r\n                        className={({isActive})=> 'nav-item nav-link' + (isActive ? 'active':'')} \r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        className={({isActive})=> 'nav-item nav-link' + (isActive ? 'active':'')}\r\n                        className=\"nav-item nav-link\" \r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        className={({isActive})=> 'nav-item nav-link' + (isActive ? 'active':'')}\r\n                        className=\"nav-item nav-link\" \r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span className='nav-item nav-link text-info'>Fernando</span>\r\n                    <button \r\n                        \r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={handlelogout} \r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useMemo } from 'react'\r\nimport { Navigate, useNavigate, useParams } from 'react-router-dom'\r\nimport { getHeroById } from '../../helpers/getHeroById';\r\n\r\nexport const HeroeScreen = () => {\r\n  //const params = useParams(); //-->Obtiene las props obtenidas al cargar la pagina\r\n  //console.log(params);\r\n  const { heroeId } = useParams();//Desestructuracion y se obtiene el valor especifico de heroeid\r\n  const navigate = useNavigate();//Declaracion del hook useNavigate\r\n  const getHero = useMemo(()=>getHeroById(heroeId),[heroeId]);  \r\n\r\n  if (!getHero) {//Validacion si se cambia la url en la pantalla del Heroe\r\n    return <Navigate to='/' />//Si no existe el id, retornar a la pantalla de inicio\r\n  }\r\n\r\n  const { id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    characters,\r\n    first_appearance } = getHero;//Desestructuracion de las props\r\n\r\n  const imagePath = `/assets/heroes/${id}.jpg`; //Variable que almacena la imagen del heroe seleccionado\r\n\r\n  const handleRegresar = ()=>{//Boton para regresar\r\n    navigate(-1); //Regresa a la pagina anterior\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='row mt-5 animate__animated animate__slideInLeft'>\r\n      <div className='col-3'>\r\n        <img src={imagePath}\r\n          alt={superhero}\r\n          className='img-thumbnail'></img>\r\n\r\n      </div>\r\n      <div className='col-8'>\r\n        <h3>{superhero}</h3>\r\n        <ul className='list-group list-group-flush'>\r\n          <li className='list-group-item'><b>Alter Ego:</b>{alter_ego}</li>\r\n          <li className='list-group-item'><b>Publisher:</b>{publisher}</li>\r\n          <li className='list-group-item'><b>Characters:</b>{characters}</li>\r\n          <li className='list-group-item'><b>First Appearance</b>{first_appearance}</li>\r\n\r\n        </ul>\r\n        <button className='btn btn-outline-info' onClick={handleRegresar}>Regresar</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\r\n//import React from 'react'\r\nimport { heroes } from '../data/heroes'\r\n\r\nexport const getHeroById = (id = '') => {\r\n  return heroes.find(hero => hero.id === id);\r\n}\r\n","import React from 'react'\r\nimport { Route,  Routes} from 'react-router-dom'\r\nimport { MarvelScreen } from '../Components/marvel/MarvelScreen'\r\nimport { SearchScreen } from '../Components/search/SearchScreen'\r\nimport { DcomicsScreen} from '../Components/dc/DcomicsScreen'\r\nimport { Navbar } from '../Components/ui/NavBar'\r\nimport { HeroeScreen } from '../Components/hero/HeroeScreen'\r\n\r\nexport const DashboardRoutes = () => {\r\n  return (\r\n   <>\r\n   <Navbar/>\r\n<div className='container'>\r\n   <Routes>\r\n                <Route path=\"/marvel\" element={<MarvelScreen/>}></Route>\r\n                <Route path=\"/dc\" element={<DcomicsScreen/>}></Route>\r\n                <Route path=\"/search\" element={<SearchScreen/>}></Route>\r\n                <Route path=\"hero/:heroeId\" element={<HeroeScreen/>}/>\r\n                <Route path=\"/\" element={<MarvelScreen/>}></Route>\r\n            \r\n            </Routes>  \r\n            </div>\r\n   </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route,  Routes} from 'react-router-dom'\r\n\r\nimport { LoginSceen } from '../Components/login/LoginSceen'\r\n\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    //<BrowserRouter>\r\n    //<h1>Hola</h1>\\\r\n    <BrowserRouter>\r\n    \r\n            <Routes>\r\n                <Route path=\"/login\" element={<LoginSceen/>}></Route>  \r\n              <Route path=\"/*\" element={<DashboardRoutes/>}/>\r\n            </Routes>  \r\n            </BrowserRouter>\r\n    //</BrowserRouter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const HeroesApp = () => {\r\n  return (\r\n    \r\n    <AppRouter/>\r\n   \r\n  )\r\n}\r\n","import React from 'react';\nimport  ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n  \n  <HeroesApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}